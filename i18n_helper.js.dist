/**
 * Copy this file to i18n_helper.js to quickly
 * import, rename, or delete i18n messages.
 *
 * To use, add the necessary code below
 * and run `node i18n_helper.js`.
 *
 * WARNING: these functions may run asynchronously,
 * so use only one at a time (or implement a callback)
 * to ensure you don't end up with corrupt files.
 */

// Relative path to the i18n directory.
const i18nPath = './i18n/';

const fs = require('fs');

/**
 * Import messages from another project to Event Metrics.
 * To use, add this code to this file:
 *     const messagesToCopy = [
 *         'pageviews',
 *         'external-link',
 *         ...
 *     ];
 *     importMessages('../pageviews/messages/', messagesToCopy);
 * @param {Array} messagesToCopy - message keys
 */
function importMessages(oldPath, messagesToCopy)
{
    fs.readdir(oldPath, (err, files) => {
        files.forEach(file => {
            const oldJson = require(`${oldPath}${file}`);
            let newJson;

            try {
                newJson = require(`${i18nPath}${file}`);
            } catch (e) {
                // new file will be created
                newJson = {};
            }

            messagesToCopy.forEach(message => {
                // skip if message already present
                if (newJson[message]) {
                    return;
                }

                const oldMessage = oldJson[message];
                newJson[message] = oldMessage;
            });

            sortAndWriteToFile(newJson, file);
        });
    });
}

/**
 * Rename a message key.
 * To use, add this code to this file:
 *     renameMessage('old_key', 'new_key');
 * @param  {String} oldName - current key name
 * @param  {String} newName - new key name
 */
function renameMessage(oldName, newName)
{
    fs.readdir(i18nPath, (err, files) => {
        files.forEach(file => {
            let json = require(`${i18nPath}${file}`);

            const message = json[oldName];
            delete json[oldName];
            json[newName] = message;

            sortAndWriteToFile(json, file);
        });
    });
}

/**
 * Delete a message from all i18n files.
 * To use, add this code to this file:
 *     deleteMessage('unused-message');
 * @param  {String} key - key name
 */
function deleteMessage(key)
{
    fs.readdir(i18nPath, (err, files) => {
        files.forEach(file => {
            let json = require(`${i18nPath}${file}`);
            delete json[key];
            sortAndWriteToFile(json, file);
        });
    });
}

/**
 * Sort an i18n file by key and save it.
 * To use, add this code to this file:
 *     sortAndWriteToFile(jsonBlob, 'en');
 * @param  {Object} json     - i18n messages file, without the .json
 * @param  {String} filename
 */
function sortAndWriteToFile(json, filename)
{
    let orderedJson = {};
    Object.keys(json).sort().forEach(key => {
        orderedJson[key] = json[key];
    });

    fs.writeFile(
        `${i18nPath}${filename}`,
        JSON.stringify(orderedJson, null, '\t') + "\n",
        {},
        err => console.log(err)
    );
}
